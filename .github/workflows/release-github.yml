name: Publish Github Releases

on:
  push:
    tags:
      - 'v**'
    branches:
      - master

jobs:
  buildRelease:
    if: github.repository == 'hectorqin/reader'
    name: "Build And Release"
    runs-on: macos-11
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      -
        name: Build web
        run: cd web && npm install && npm run build && mv ./dist ../src/main/resources/web
      -
        name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      -
        name: Build MacOS package
        run:
          JAVAFX_PLATFORM=mac ./gradlew packageReaderMac
      -
        name: Build Linux package
        run:
          JAVAFX_PLATFORM=linux ./gradlew packageReaderLinux
      -
        name: Build Windows package
        run:
          JAVAFX_PLATFORM=win ./gradlew packageReaderWin
      -
        name: Build server jar
        run:
          rm src/main/java/com/htmake/reader/ReaderUIApplication.kt && gradle -b cli.gradle assemble --info
      -
        name: Show files.
        run: |
          echo Showing current directory:
          ls
          echo Showing ./target directory:
          ls ./build
          echo Showing ./target directory:
          ls ./build/libs
      -
        name: Pre Release
        if: ${{contains(github.ref, 'master')}}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ./build/*.pkg
            ./build/*.zip
            ./build/libs/*.jar
      -
        name: Tagged Release
        if: ${{contains(github.ref, 'v')}}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ./build/*.pkg
            ./build/*.zip
            ./build/libs/*.jar
      -
        name: Prepare Server Jar
        run:
          mv ./build/libs/*.jar ./reader.jar
      -
        name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: reader.jar

  release-tauri:
    needs: buildRelease
    name: 'Build tauri app'
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    if: |
      startsWith(github.repository, 'hectorqin')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: my-artifact

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72
        with:
          working-directory: src-tauri

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev librsvg2-dev libayatana-appindicator3-dev

      - name: Get yarn cache dir path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install and check
        working-directory: web
        run: |
          yarn install --network-timeout 1000000
          yarn run sync-tauri

      - name: Show files.
        run: |
          node -e "var fs = require('fs');console.log(fs.readdirSync('.'));console.log(fs.readdirSync('./tauri'));console.log(fs.readdirSync('./tauri/dist'));"

      - name: Tauri build
        uses: tauri-apps/tauri-action@0e558392ccadcb49bcc89e7df15a400e8f0c954d
        # enable cache even though failed
        # continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: ./tauri
          tagName: tauri_v__VERSION__
          releaseName: "Reader Desktop v__VERSION__"
          releaseBody: "More new features are now supported."
          releaseDraft: false
          prerelease: true